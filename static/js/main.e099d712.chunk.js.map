{"version":3,"sources":["components/ResultsTable.js","lib/tupa.js","components/HanCard.js","components/HansContainer.js","App.js","index.js"],"names":["fields","ResultsTable","columns","values","class","map","columnName","i","row","v","indexOf","String","fromCodePoint","Number","tupa","音韻地位","選項","is","屬於","is脣音咍韻","正則化","標準","寬鬆","模式","Qieyun","脣音咍韻歸灰韻","調整","韻","幫","滂","並","明","端","透","定","泥","來","知","徹","澄","孃","見","溪","羣","疑","云","影","曉","匣","精","清","從","心","邪","莊","初","崇","生","俟","章","昌","常","書","船","日","以","母","判斷","when","匹配行","find","行","includes","元音","replace","韻尾","get韻母","上","去","聲","createData","k","style","fontSize","replaceAll","marks","p","length","push","newV","parts","split","part","fontWeight","color","HanCard","rowdata","cells","title","Card","raised","className","sx","minWidth","CardContent","Table","size","width","TableBody","TableRow","TableCell","scope","align","whiteSpace","wordWrap","HansContainer","data","Grid","container","spacing","direction","justifyContent","alignItems","item","xs","sm","converterCH","OpenCC","from","to","converterHC","converterHT","converterHJ","App","db","setDb","useState","error","setError","useEffect","async","SQL","initSqlJs","locateFile","sqlWasm","dataPromise","fetch","mode","then","res","arrayBuffer","buf","Promise","all","Database","Uint8Array","err","toString","SQLRepl","isChinese","s","test","hansPrim2500","hansSecond1000","query","setQuery","results","setResults","isCardMode","setIsCardMode","showVariants","setShowVariants","showGuangyunOnly","setShowGuangyunOnly","terms","currAlphaNumTerm","ch","yitiCh","Yitizi","get","query字頭","ch_hk","concat","Set","newsql","unicode","charCodeAt","newRes","exec","entry","han","音韻地位列表","unshift","描述","join","unt","schema","版本","Container","Typography","variant","gutterBottom","id","onChange","e","target","value","placeholder","Stack","flexWrap","FormControlLabel","control","Switch","checked","name","label","Tooltip","Button","onClick","randHan","Math","random","charAt","floor","document","getElementById","rootElement","darkTheme","createTheme","palette","ReactDOM","render","StrictMode","ThemeProvider","theme"],"mappings":"mjBAEA,MAAMA,EAAS,CAAC,OAAQ,SAAU,SAAU,UAAW,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAAS,SAAU,SAAU,UAAW,YAoC1HC,I,oBAAAA,EA9BM,IAA0B,IAAzB,QAAEC,EAAF,OAAWC,GAAa,EAC1C,OACI,wBAAOC,MAAM,gBAAb,UACE,gCACE,6BACKF,EAAQG,KAAI,CAACC,EAAYC,IACxB,6BAAaD,GAAJC,SAKjB,gCAGIJ,EAAOE,KAAI,CAACG,EAAKD,IACf,6BACGC,EAAIH,KAAI,CAACI,EAAGF,IACX,6BAAaA,IAAMP,EAAOU,QAAQ,WAChCC,OAAOC,cAAcC,OAAO,KAAOJ,IACnCA,GAFOF,MAFJA,SAdrB,E,OCPW,SAASO,EAAMC,GAAqB,IAARC,EAAO,uDAAJ,CAAC,EAe/C,IAAKD,EAAM,MAAO,GAElB,MAAME,EAAK,kBAAUF,EAAKG,gBAAM,UAArB,EAILC,EAASF,EAAH,mDAENG,EAAM,CACVC,eAAI,KACJC,eAAI,aACJN,EAAGO,eAAO,WA4EZ,OA3EAR,EAAOS,0CAAcJ,GAAKL,GAGtBI,IAAWH,EAAGS,6CAChBV,EAAOA,EAAKW,aAAG,CAAEC,SAAG,YAIb,CACLC,SAAG,IAAMC,SAAG,KAAOC,SAAG,IAAMC,SAAG,IAC/BC,SAAG,IAAMC,SAAG,KAAOC,SAAG,IAAMC,SAAG,IAAMC,SAAG,IACxCC,SAAG,KAAMC,SAAG,MAAOC,SAAG,KAAMC,SAAG,KAC/BC,SAAG,IAAMC,SAAG,KAAOC,SAAG,IAAMC,SAAG,KAAMC,SAAG,GACxCC,SAAG,IAAMC,SAAG,IAAOC,SAAG,KACtBC,SAAG,KAAOC,SAAG,MAAQC,SAAG,KAAOC,SAAG,IAAMC,SAAG,IAC3CC,SAAG,MAAOC,SAAG,OAAQC,SAAG,MAAOC,SAAG,KAAMC,SAAG,KAC3CC,SAAG,KAAOC,SAAG,MAAQC,SAAG,KAAOC,SAAG,KAAMC,SAAG,KAAMC,SAAG,KAAMC,SAAG,KAC7DlD,EAAKmD,QAGT,WAEE,MAAMvC,EA/BK,kBAAUZ,EAAKoD,gBAAM,UAArB,CA+BDC,CAAK,CACb,CAAC,6EAAuB,UACxB,CAAC,4BAAS,UACV,CAAC,eAAM,UACP,CAAC,eAAM,UACP,CAAC,6DAAiB,UAClB,CAAC,eAAM,UACP,CAAC,GAAIrD,EAAKY,UAiBZ,IAAI0C,EAfS,CACX,CAAC,0FAAqB,IACtB,CAAC,0FAAqB,KAAM,KAC5B,CAAC,0FAAqB,KACtB,CAAC,0FAAqB,IAAK,KAC3B,CAAC,0FAAqB,KACtB,CAAC,0FAAqB,IAAK,MASdC,MAAKC,GAAKA,EAAE,GAAGC,SAAS7C,KACnC8C,EARS,CACX,IAAW,IAAM,IAAK,KACtB,IAAK,KAAM,KAAM,IAAK,MACtB,IAAW,KAAM,KACZ,KAAM,KAICJ,EAAI,GAAGK,QAAQ,KAAM,IAAIzD,EAAE,sCAAO,UAAY,eAAeU,IACvEgD,EAAKN,EAAI,EAAIpD,EAAJ,uCAoBb,OAjBIA,EAAE,uCAAe,MAAPwD,IAEZA,GAAMxD,EAAE,0DAAY,IAAMA,EAAE,sCAAO,IAAM,KAAOwD,GAG9CxD,EAAE,uCAAQ,CAAC,IAAK,IAAK,MAAMuD,SAASC,KAClCxD,EAAJ,gJACEwD,GAAMxD,EAAE,sCAAO,IAAM,KAAOwD,EACZ,MAAPA,IAETA,EAAK,IAAMA,IAIXxD,EAAE,wCAAS,CAAC,IAAK,KAAKuD,SAASC,EAAG,MACpCA,EAAK,IAAMA,GAENA,EAAKE,CACb,CAMgBC,IAHR,CAAEC,SAAG,IAAKC,SAAG,KAAM/D,EAAKgE,SAAM,GAItC,C,qFC/FD,MAAM/E,EAAS,CAAC,OAAQ,SAAU,SAAU,UAAW,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAAS,SAAU,SAAU,UAAW,YAEzI,SAASgF,EAAWC,EAAGxE,GACV,cAALwE,IACAxE,EAAI,sBAAMyE,MAAO,CAAEC,SAAU,IAAzB,SAAgCxE,OAAOC,cAAcC,OAAO,KAAOJ,OAC3EA,EAAIA,EAAIA,EAAE2E,WAAa3E,EAAE2E,WAAW,IAAK,MAAQ3E,EAAI,GACrD,IAAI4E,EAAQ,GACZ,IAAK,IAAIC,EAAI,EAAG7E,GAAK6E,EAAI7E,EAAE8E,OAAQD,IACnB,KAAR7E,EAAE6E,IACFD,EAAMG,KAAK,KAEH,KAAR/E,EAAE6E,IACFD,EAAMG,KAAK,KAGnB,IAAIC,EAAO,KACX,GAAIJ,EAAME,QAAUF,EAAME,OAAS,GAAK,EAAG,CAIvC,IAAIG,EAAQjF,EAAEkF,MAAM,UACpBF,EAAO,mCAAGC,EAAMrF,KAAI,CAACuF,EAAMrF,IACnBA,EAAI,EACgB,KAAZ8E,EAAM9E,GAAY,sBAAc2E,MAAO,CAAEW,WAAY,OAAnC,mBAAgDD,IAArCrF,GAAsD,sBAAc2E,MAAO,CAAEY,MAAO,QAA9B,mBAA4CF,IAAjCrF,GAClG,yCAAkBqF,IAAPrF,MAE1B,MACGkF,EAAOhF,EAEX,MAAO,CAAEwE,IAAGQ,OACf,CA2DcM,MAzDC,IAAkB,IAAjB,QAAEC,GAAc,EAC7B,MAAMC,EAAQ,CACVjB,EAAW,aAASgB,EAAQhG,EAAOU,QAAQ,aAC3CsE,EAAW,sBAAMkB,MAAM,qCAAZ,+BAAiEF,EAAQhG,EAAOU,QAAQ,UACnGsE,EAAW,sBAAMkB,MAAM,oFAAZ,iCAAoFF,EAAQhG,EAAOU,QAAQ,YACtHsE,EAAW,sBAAMkB,MAAM,sFAAZ,iCAA4EF,EAAQhG,EAAOU,QAAQ,YAC9GsE,EAAW,sBAAMkB,MAAM,6EAAZ,gCAAiFF,EAAQhG,EAAOU,QAAQ,QACnHsE,EAAW,sBAAMkB,MAAM,8BAAZ,wBAAwDF,EAAQhG,EAAOU,QAAQ,QAC1FsE,EAAW,sBAAMkB,MAAM,yBAAZ,wBAAmDF,EAAQhG,EAAOU,QAAQ,QACrFsE,EAAW,sBAAMkB,MAAM,2BAAZ,wBAAqDF,EAAQhG,EAAOU,QAAQ,QACvFsE,EAAW,sBAAMkB,MAAM,gCAAZ,wBAA0DF,EAAQhG,EAAOU,QAAQ,QAC5FsE,EAAW,sBAAMkB,MAAM,SAAZ,uBAAkCF,EAAQhG,EAAOU,QAAQ,QACpEsE,EAAW,sBAAMkB,MAAM,aAAZ,uBAAsCF,EAAQhG,EAAOU,QAAQ,QACxEsE,EAAW,sBAAMkB,MAAM,4CAAZ,oCAAgEF,EAAQhG,EAAOU,QAAQ,WAClGsE,EAAW,sBAAMkB,MAAM,8CAAZ,qCAAmEF,EAAQhG,EAAOU,QAAQ,aASzG,OAPIsF,EAAQhG,EAAOU,QAAQ,YACvBuF,EAAMT,KAAKR,EAAW,sBAAMkB,MAAM,mDAAZ,oCAAkEF,EAAQhG,EAAOU,QAAQ,aAC/GsF,EAAQhG,EAAOU,QAAQ,aACvBuF,EAAMT,KAAKR,EAAW,sBAAMkB,MAAM,kEAAZ,sCAA8EF,EAAQhG,EAAOU,QAAQ,cAC3HsF,EAAQhG,EAAOU,QAAQ,cACvBuF,EAAMT,KAAKR,EAAW,sBAAMkB,MAAM,wBAAZ,uCAAyDF,EAAQhG,EAAOU,QAAQ,eAGtG,8BACI,cAACyF,EAAA,EAAD,CAAMC,QAAM,EAACC,UAAU,iBAAiBC,GAAI,CAAEC,SAAU,KAAxD,SACI,qBAAKF,UAAU,eAAf,SACI,cAACG,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAOC,KAAK,QAAQ,aAAW,gBAA/B,UACI,qCACI,qBAAKxB,MAAO,CAAEyB,MAAO,SACrB,qBAAKzB,MAAO,CAAEyB,MAAO,YAEzB,cAACC,EAAA,EAAD,UACKX,EAAM5F,KAAI,CAACG,EAAKD,IACb,eAACsG,EAAA,EAAD,WAII,cAACC,EAAA,EAAD,CAAWC,MAAM,MAAjB,SACKvG,EAAIyE,GADmB1E,EAAI,SAGhC,eAACuG,EAAA,EAAD,CAA6BE,MAAM,OAAO9B,MAAO,CAC7C+B,WAAY,SACZC,SAAU,cAFd,cAGK1G,EAAIiF,KAHT,MAAgBlF,EAAI,WANfA,iBAbzC,EC5CW4G,MAhBO,IAAwB,IAAvB,QAAEjH,EAAF,KAAWkH,GAAW,EACzC,OACI,8BACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACjB,UAAU,iBAAiBkB,QAAS,EAChDC,UAAU,MAAMC,eAAe,aAC/BC,WAAW,UAFf,SAGKN,EAAK/G,KAAI,CAACG,EAAKD,IACZ,cAAC8G,EAAA,EAAD,CAAcM,MAAI,EAACC,GAAI,GAAIC,GAAI,EAA/B,SACI,cAAC,EAAD,CAAiB7B,QAASxF,GAAZD,IADPA,QAN3B,E,SCgBJ,MAAMuH,EAAcC,YAAiB,CAAEC,KAAM,KAAMC,GAAI,OACjDC,EAAcH,YAAiB,CAAEC,KAAM,KAAMC,GAAI,OACjDE,EAAcJ,YAAiB,CAAEC,KAAM,KAAMC,GAAI,OACjDG,EAAcL,YAAiB,CAAEC,KAAM,KAAMC,GAAI,OAExC,SAASI,KACpB,MAAOC,EAAIC,GAASC,mBAAS,OACtBC,EAAOC,GAAYF,mBAAS,MAgBnC,OAdAG,qBAAUC,UAIN,IACI,MAAMC,QAAYC,IAAU,CAAEC,WAAY,IAAMC,MAC1CC,EAAcC,MAAM,yCAA0C,CAAEC,KAAM,SAAUC,MAAKC,GAAOA,EAAIC,iBAC/FC,SAAaC,QAAQC,IAAI,CAACR,IACjCV,EAAM,IAAIM,EAAIa,SAAS,IAAIC,WAAWJ,IACzC,CAAC,MAAOK,GACLlB,EAASkB,EACZ,IACF,IAECnB,EAAc,8BAAMA,EAAMoB,aACpBvB,EACE,cAACwB,GAAD,CAASxB,GAAIA,IADJ,4CAExB,CAED,SAASyB,GAAUC,GAGf,MAAO,kBAAkBC,KAAKD,IACvB,kBAAkBC,KAAKD,EACjC,CAID,MAAME,GAAe,2pdACfC,GAAiB,m3LAevB,SAASL,GAAT,GAA0B,IAAT,GAAExB,GAAM,EACrB,MAAO8B,EAAOC,GAAY7B,mBAAS,KAC5BC,EAAOC,GAAYF,mBAAS,OAC5B8B,EAASC,GAAc/B,mBAAS,KAChCgC,EAAYC,GAAiBjC,oBAAS,IACtCkC,EAAcC,GAAmBnC,oBAAS,IAC1CoC,EAAkBC,GAAuBrC,oBAAS,GAEzDG,qBAAU,MAIV,SAAcyB,GACV,GAAa,IAATA,EAAa,OACjBG,EAAW,IACX,IAGI,IAAIlB,EAAM,CAAC,CACPnJ,QAAS,CAAC,OAAQ,SAAU,SAAU,UAAW,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAAS,SAAU,SAAU,UAAW,YACnIC,OAAQ,KAMR2K,EAAQ,GACRC,EAAmB,GACvB,IAAK,IAAIxK,EAAI,EAAGA,EAAI6J,EAAM7E,OAAQhF,IAAK,CACnC,IAAIyK,EAAKZ,EAAM7J,GACf,GAAK,cAAe0J,KAAKe,GAErBD,GAAoBC,OACjB,GAAIjB,GAAUiB,GAMjB,GAJID,IACAD,EAAMtF,KAAKuF,GACXA,EAAmB,IAEnBH,EACA,IAAK,IAAIK,IAAU,CAACD,KAAOE,IAAOC,IAAIH,IACM,GAApCxJ,kBAAU4J,kBAAQH,GAAQ1F,QAC1BuF,EAAMtF,KAAKyF,QAChB,GAAIP,EAAc,CAErB,IAAIW,EAAQvD,EAAYkD,GACxBF,EAAMtF,KAAK6F,EAAOlD,EAAYkD,GAAQnD,EAAYmD,GAAQjD,EAAYiD,IACtEP,EAAQA,EAAMQ,OAAOJ,IAAOC,IAAIH,GACnC,MACGF,EAAMtF,KAAKwF,QAIXD,IACAD,EAAMtF,KAAKuF,GACXA,EAAmB,GAG9B,CACGA,IACAD,EAAMtF,KAAKuF,GACXA,EAAmB,IAKvB,IAAK,IAAIpD,IAAQ,IAAI,IAAI4D,IAAIT,IAAS,CAClC,IAAIU,EAAS,GACb,GAAIzB,GAAUpC,GAAO,CACjB,IAAI8D,EAAU,GACdA,GAAW9D,EAAK+D,WAAW,GAAG7B,SAAS,IACvC2B,EAAM,qDAAiDC,EAAjD,KACT,MACGD,EAAM,2EACiB7D,EADjB,sDAEcA,EAFd,qDAGcA,EAHd,qDAIcA,EAJd,qDAKcA,EALd,qDAMcA,EANd,qDAOcA,EAPd,wDAQiBA,EARjB,yDASkBA,EATlB,yDAUkBA,EAVlB,0DAWmBA,EAXnB,2DAYoBA,EAZpB,yCAeVe,EAAS,MACT,IAAIiD,EAASrD,EAAGsD,KAAKJ,GACjBzB,GAAUpC,IAA0B,GAAjBgE,EAAOpG,QAC1BoG,EAAOnG,KAAK,CACRtF,QAAS,CAAC,OAAQ,SAAU,SAAU,UAAW,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAAS,SAAU,SAAU,UAAW,YACnIC,OAAQ,CAAC,CAACwH,EAAK+D,WAAW,GAAG7B,SAAS,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAE3F8B,EAAOpG,SACPoG,EAAO,GAAGxL,OAASwL,EAAO,GAAGxL,OAAOE,KAAI,CAACwL,EAAOtL,KAC5C,MAAMuL,EAAMnL,OAAOC,cAAcC,OAAO,KAAOgL,EAAM,KAC/CE,EAASvK,kBAAU4J,kBAAQU,GAAKzL,KAAI,CAACI,EAAGF,IAAME,EAAEM,2BAItD,OAHA8K,EAAMG,QAAQD,EAAO1L,KAAI,CAACI,EAAGF,IAAME,EAAEwL,eAAIC,KAAK,MAC9CL,EAAMG,QAAQD,EAAO1L,KAAI,CAACI,EAAGF,IAAM4L,IAAIC,OAAO,CAAEC,eAAI,gBAAjBF,CAAyB1L,KAAIyL,KAAK,MACrEL,EAAMG,QAAQD,EAAO1L,KAAI,CAACI,EAAGF,IAAMO,EAAKL,KAAIyL,KAAK,MAC1CL,CAAP,IAEJxC,EAAI,GAAGlJ,OAASkJ,EAAI,GAAGlJ,OAAOmL,OAAOK,EAAO,GAAGxL,QAEtD,CACDoK,EAAWlB,EAEd,CAAC,MAAOO,GAELlB,EAASkB,GACTW,EAAW,GACd,CACJ,CAzGGqB,CAAKxB,EAAL,GACD,CAACA,EAAOM,EAAcE,IAgHzB,OACI,eAAC0B,EAAA,EAAD,CAAWjG,UAAU,MAArB,UACI,yCACA,cAACkG,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,EAAxC,6HAMA,0BACIC,GAAG,gBACHC,SAAWC,GAAMvC,EAASuC,EAAEC,OAAOC,OACnCC,YAAY,qHAGhB,eAACC,EAAA,EAAD,CAAOxF,UAAU,MAAMD,QAAS,EAAG0F,SAAS,OAAOxF,eAAe,aAAlE,UAEI,cAACyF,EAAA,EAAD,CAAkBC,QAAS,cAACC,EAAA,EAAD,CACvBC,QAAS3C,EACTiC,SAAU,IAAMhC,GAAiBD,GACjC4C,KAAK,kCACLxH,MAAM,YACNyH,MAAM,oCAEV,cAACL,EAAA,EAAD,CAAkBC,QAAS,cAACC,EAAA,EAAD,CACvBC,QAASzC,EACT+B,SAAU,IAAM9B,GAAqBD,GACrC0C,KAAK,6BACLxH,MAAM,YACNyH,MAAM,+BAEV,cAACC,EAAA,EAAD,CAAStH,MAAM,wDAAf,SACI,cAACuH,EAAA,EAAD,CAAQC,QAtCE,KACtB,IAAIC,EA/HJC,KAAKC,UAAY,GACV3D,GAAa4D,OAAOF,KAAKG,MAAsB,KAAhBH,KAAKC,WAEpC1D,GAAe2D,OAAOF,KAAKG,MAAsB,IAAhBH,KAAKC,WA6H7CG,SAASC,eAAe,iBAAiBnB,MAAQa,EACjDtD,EAASsD,EAAT,EAmCY,0BAGJ,cAACT,EAAA,EAAD,CAAkBC,QAAS,cAACC,EAAA,EAAD,CACvBC,QAAS7C,EACTmC,SAAU,IAAMlC,GAAeD,GAC/B8C,KAAK,YACLxH,MAAM,YACNyH,MAAM,iBAKd,qBAAKlH,UAAU,QAAf,UAAyBoC,GAAS,IAAIoB,aAEtC,8BAESW,EAMGF,EAAQjK,KAAI,CAAC,EAAqBE,KAAtB,IAAC,QAAEL,EAAF,OAAWC,GAAZ,SACR,cAAC,EAAD,CAAuBD,QAASA,EAASkH,KAAMjH,GAA3BI,EADZ,IAJZ+J,EAAQjK,KAAI,CAAC,EAAqBE,KAAtB,IAAC,QAAEL,EAAF,OAAWC,GAAZ,SACR,cAAC,EAAD,CAAsBD,QAASA,EAASC,OAAQA,GAA7BI,EADX,QAYnC,CC7PD,MAAM2N,GAAcF,SAASC,eAAe,QACtCE,GAAYC,YAAY,CAC1BC,QAAS,CACLlF,KAAM,UAGdmF,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACC,EAAA,EAAD,CAAeC,MAAOP,GAAtB,SACI,cAAC9F,GAAD,QAGR6F,G","file":"static/js/main.e099d712.chunk.js","sourcesContent":["import \"../styles.css\";\n\nconst fields = ['tupa', 'unt-tz', 'qieyun', 'unicode', 'mc', 'pu', 'ct', 'sh', 'mn', 'kr', 'vn', 'jp_go', 'jp_kan', 'jp_tou', 'jp_kwan', 'jp_other'];\n\n/**\n * Renders a single value of the array returned by db.exec(...) as a table\n * @param {import(\"sql.js\").QueryExecResult} props\n */\nconst ResultsTable = ({ columns, values }) => {\n    return (\n        <table class=\"results-table\">\n          <thead>\n            <tr>\n                {columns.map((columnName, i) => (\n                  <td key={i}>{columnName}</td>\n                ))}\n            </tr>\n          </thead>\n    \n          <tbody>\n            {\n              // values is an array of arrays representing the results of the query\n              values.map((row, i) => (\n                <tr key={i}>\n                  {row.map((v, i) => (\n                    <td key={i}>{i === fields.indexOf('unicode') ? \n                      String.fromCodePoint(Number('0x' + v)) :\n                      v}\n                    </td>\n                  ))}\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      );\n};\n\nexport default ResultsTable;","// slightly modified from https://github.com/nk2028/qieyun-examples/blob/main/tupa.js\nimport * as Qieyun from 'qieyun' // Mainly changed this line from `import Qieyun from 'qieyun'` to avoid undefined Error\nexport default function tupa (音韻地位, 字頭='', 選項={}) {\n/* 切韻拼音\n *\n * https://zhuanlan.zhihu.com/p/478751152\n *\n * 推導器所用的音韻地位無需選項，但在處理其他來源的音韻地位時可指定以下選項：\n *\n * 選項.模式 = '嚴格'; // 僅允許正則地位（如不指定 `模式`，也按嚴格模式處理）\n * 選項.模式 = '標準'; // 允許部分非正則地位（推導爲對應的正則地位），不允許無法自動正則化的聲韻搭配\n * 選項.模式 = '寬鬆'; // 允許非正則地位，無法自動正則化的聲韻搭配保持原樣\n * 選項.脣音咍韻歸灰韻 = false; // 脣音咍韻推導爲開口，僅在「標準」「寬鬆」模式下有效\n *\n * @author unt\n */\n\nif (!音韻地位) return [];\n\nconst is = (...x) => 音韻地位.屬於(...x);\nconst when = (...x) => 音韻地位.判斷(...x);\n\n// 正則化之前需保留該信息\nconst is脣音咍韻 = is`脣音 咍韻`;\n\nconst 正則化 = {\n  標準: 'v2',\n  寬鬆: 'v2lenient',\n}[選項.模式] || 'v2Strict';\n音韻地位 = Qieyun.適配分析體系[正則化](音韻地位);\n\n// 恢復脣音咍韻信息\nif (is脣音咍韻 && !選項.脣音咍韻歸灰韻) {\n  音韻地位 = 音韻地位.調整({ 韻: '咍' });\n}\n\nfunction get聲母() {\n  return {\n    幫: 'p',  滂: 'ph',  並: 'b',  明: 'm',\n    端: 't',  透: 'th',  定: 'd',  泥: 'n',  來: 'l',\n    知: 'tr', 徹: 'trh', 澄: 'dr', 孃: 'nr',\n    見: 'k',  溪: 'kh',  羣: 'g',  疑: 'ng', 云: '',\n    影: 'q',  曉: 'h',   匣: 'gh',\n    精: 'ts',  清: 'tsh',  從: 'dz',  心: 's',  邪: 'z',\n    莊: 'tsr', 初: 'tsrh', 崇: 'dzr', 生: 'sr', 俟: 'zr',\n    章: 'tj',  昌: 'tjh',  常: 'dj',  書: 'sj', 船: 'zj', 日: 'nj', 以: 'j',\n  }[音韻地位.母];\n}\n\nfunction get韻母() {\n  // 爲了方便推導，對韻類稍作調整\n  const 韻 = when([\n    ['蒸韻 (重紐B類 或 幫組 或 合口)', '冰'],\n    ['東韻 三等', '終'],\n    ['清韻', '庚'],\n    ['陽韻', '唐'],\n    ['臻韻 或 莊組 欣韻 上聲', '眞'],\n    ['凡韻', '嚴'],\n    ['', 音韻地位.韻],\n  ]);\n  const 韻到韻尾 = [\n    ['脂之尤侯 　佳　模　 支魚虞 麻歌', ''],\n    ['冰蒸終東 青耕登冬江 　　鍾 庚唐', 'ng', 'k'],\n    ['　微微　 齊皆咍灰　 祭廢廢 夬泰', 'j'],\n    ['眞欣文　 先山痕魂　 仙元元 刪寒', 'n', 't'],\n    ['幽　　　 蕭　　　　 宵　　 肴豪', 'w'],\n    ['侵　　　 添咸　覃　 鹽嚴嚴 銜談', 'm', 'p'],\n  ];\n  const 元音列表 = [\n    'i',       'y',  'u', 'ou',\n    'e', 'ee', 'eo', 'o', 'oeu',\n    'e',       'yo', 'uo',\n         'ae', 'a',\n  ];\n\n  let 匹配行 = 韻到韻尾.find(行 => 行[0].includes(韻));\n  let 元音 = 元音列表[匹配行[0].replace(/ /g, '')[is`開口` ? 'indexOf' : 'lastIndexOf'](韻)];\n  let 韻尾 = 匹配行[1 + is`入聲`];\n\n  // 添加三等 C 介音（僅歌陽韻需要處理）\n  if (is`三等` && 元音 === 'a') {\n    // 重紐A類用於𩦠小韻\n    元音 = (is`脣音 重紐A類` ? 'i' : is`開口` ? 'y' : 'u') + 元音;\n  }\n  // 添加三等 A、B 介音\n  if (is`三等` && ['i', 'e', 'ae'].includes(元音)) {\n    if (is`重紐B類 或 云母 或 莊組 或 庚蒸韻 或 幽韻 幫組`) {\n      元音 = (is`合口` ? 'u' : 'y') + 元音;\n    } else if (元音 !== 'i') {\n      // 拼莊組以外的銳音一律視爲 A 類（同《切韻》清韻、《廣韻》諄韻的獨立條件）\n      元音 = 'i' + 元音;\n    }\n  }\n  // 添加合口介音\n  if (is`合口` && !['u', 'o'].includes(元音[0])) {\n    元音 = 'w' + 元音;\n  }\n  return 元音 + 韻尾;\n}\n\nfunction get聲調() {\n  return { 上: 'q', 去: 'h' }[音韻地位.聲] || '';\n}\n\nreturn get聲母() + get韻母() + get聲調();\n}","import Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport React from 'react';\n\nimport \"../styles.css\";\n\nconst fields = ['tupa', 'unt-tz', 'qieyun', 'unicode', 'mc', 'pu', 'ct', 'sh', 'mn', 'kr', 'vn', 'jp_go', 'jp_kan', 'jp_tou', 'jp_kwan', 'jp_other'];\n\nfunction createData(k, v) {\n    if (k == '字 Han')\n        v = <span style={{ fontSize: 36 }}>{String.fromCodePoint(Number('0x' + v))}</span>;\n    v = v ? v.replaceAll ? v.replaceAll(',', ', ') : v : '';\n    let marks = [];\n    for (let p = 0; v && p < v.length; p++) {\n        if (v[p] == '*') {\n            marks.push('*')\n        }\n        if (v[p] == '|') {\n            marks.push('|')\n        }\n    }\n    let newV = null;\n    if (marks.length && marks.length % 2 == 0) {\n        // if v starts with * or |, an empty element will be parts[0]\n        // |ling5|, *liong5*, |ging5|, [long1]\n        // 0:\"\", 1:\"ling5\", 2:\", \", 3:\"liong5\", 4:\", \", 5:\"ging5\", 6:\", [long1]\"\n        let parts = v.split(/[\\*\\|]/)\n        newV = <>{parts.map((part, i) => {\n            if (i % 2)\n                return (marks[i] == '*' ? <span key={i} style={{ fontWeight: '900' }}>{`${part}`}</span> : <span key={i} style={{ color: 'grey' }}>{`${part}`}</span>)\n            return (<span key={i}>{`${part}`}</span>)\n        })}</>\n    } else {\n        newV = v;\n    }\n    return { k, newV };\n}\n\nconst HanCard = ({ rowdata }) => {\n    const cells = [\n        createData('字 Han', rowdata[fields.indexOf('unicode')]),\n        createData(<abbr title=\"TUPA, Tshet-uinh Phonetic Alphabet\">切拼 TUPA</abbr>, rowdata[fields.indexOf('tupa')]),\n        createData(<abbr title=\"切韻通俗擬音 Tshet-uinh thoung-zuok Reconstruction by unt\">通擬 unt-tz</abbr>, rowdata[fields.indexOf('unt-tz')]),\n        createData(<abbr title=\"Phonological properties in Qieyun, 切韻音韻地位描述\">韻述 Qieyun</abbr>, rowdata[fields.indexOf('qieyun')]),\n        createData(<abbr title=\"Middle Chinese Transcription (polyhedron's 古韻羅馬字)\">古韻 Kyonh</abbr>, rowdata[fields.indexOf('mc')]),\n        createData(<abbr title=\"Putonghua, Mandarin Chinese\">普 cmn</abbr>, rowdata[fields.indexOf('pu')]),\n        createData(<abbr title=\"Cantonese, Yue Chinese\">粵 yue</abbr>, rowdata[fields.indexOf('ct')]),\n        createData(<abbr title=\"Shanghainese, Wu Chinese\">吳 wuu</abbr>, rowdata[fields.indexOf('sh')]),\n        createData(<abbr title=\"Hokkien, Southern Min Chinese\">閩 nan</abbr>, rowdata[fields.indexOf('mn')]),\n        createData(<abbr title=\"Korean\">韓 ko</abbr>, rowdata[fields.indexOf('kr')]),\n        createData(<abbr title=\"Vietnamese\">越 vi</abbr>, rowdata[fields.indexOf('vn')]),\n        createData(<abbr title=\"Japanese Go-on (呉音, 'Wu sound')\">日·呉 ja-go</abbr>, rowdata[fields.indexOf('jp_go')]),\n        createData(<abbr title=\"Japanese Kan-on (漢音, 'Han sound')\">日·漢 ja-kan</abbr>, rowdata[fields.indexOf('jp_kan')])\n    ]\n    if (rowdata[fields.indexOf('jp_tou')])\n        cells.push(createData(<abbr title=\"Japanese Tō-on (唐音, 'Tang sound')\">日·唐 ja-to</abbr>, rowdata[fields.indexOf('jp_tou')]))\n    if (rowdata[fields.indexOf('jp_kwan')])\n        cells.push(createData(<abbr title=\"Japanese Kan'yō-on (慣用音, 'customary sound')\">日·慣 ja-kwan</abbr>, rowdata[fields.indexOf('jp_kwan')]))\n    if (rowdata[fields.indexOf('jp_other')])\n        cells.push(createData(<abbr title=\"Japanese Other sounds\">日·他 ja-other</abbr>, rowdata[fields.indexOf('jp_other')]))\n\n    return (\n        <div>\n            <Card raised className=\"card-container\" sx={{ minWidth: 275 }}>\n                <div className=\"card-content\">\n                    <CardContent>\n                        <Table size=\"small\" aria-label=\"a dense table\">\n                            <colgroup>\n                                <col style={{ width: '30%' }} />\n                                <col style={{ width: '70%' }} />\n                            </colgroup>\n                            <TableBody>\n                                {cells.map((row, i) => (\n                                    <TableRow\n                                        key={i}\n                                    // sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell scope=\"row\" key={i + 'cell1'}>\n                                            {row.k}\n                                        </TableCell>\n                                        <TableCell key={i + 'cell2'} align=\"left\" style={{\n                                            whiteSpace: \"normal\",\n                                            wordWrap: \"break-word\"\n                                        }}> {row.newV} </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </CardContent>\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default HanCard;","import Grid from '@mui/material/Grid';\nimport React from 'react';\nimport \"../styles.css\";\nimport HanCard from './HanCard';\n\nconst HansContainer = ({ columns, data }) => {\n    return (\n        <div>\n            <Grid container className=\"hans-container\" spacing={1}\n                direction=\"row\" justifyContent=\"flex-start\"\n                alignItems=\"stretch\">\n                {data.map((row, i) =>\n                    <Grid key={i} item xs={12} sm={4}>\n                        <HanCard key={i} rowdata={row} />\n                    </Grid>\n                )}\n            </Grid>\n        </div>\n    );\n}\n\nexport default HansContainer;","import Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Stack from '@mui/material/Stack';\nimport Switch from '@mui/material/Switch';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\nimport * as OpenCC from 'opencc-js';\nimport * as Qieyun from 'qieyun';\nimport { unt } from \"qieyun-examples\";\nimport React, { useEffect, useState } from \"react\";\nimport initSqlJs from \"sql.js\";\nimport ResultsTable from \"./components/ResultsTable\";\nimport tupa from './lib/tupa';\nimport \"./styles.css\";\nimport Yitizi from \"yitizi\";\n\nimport HansContainer from './components/HansContainer';\n\n// Required to let webpack 4 know it needs to copy the wasm file to our assets\nimport sqlWasm from \"!!file-loader?name=sql-wasm-[contenthash].wasm!sql.js/dist/sql-wasm.wasm\";\n\nconst converterCH = OpenCC.Converter({ from: 'cn', to: 'hk' });\nconst converterHC = OpenCC.Converter({ from: 'hk', to: 'cn' });\nconst converterHT = OpenCC.Converter({ from: 'hk', to: 'tw' });\nconst converterHJ = OpenCC.Converter({ from: 'hk', to: 'jp' });\n\nexport default function App() {\n    const [db, setDb] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(async () => {\n        // sql.js needs to fetch its wasm file, so we cannot immediately instantiate the database\n        // without any configuration, initSqlJs will fetch the wasm files directly from the same path as the js\n        // see ../craco.config.js\n        try {\n            const SQL = await initSqlJs({ locateFile: () => sqlWasm });\n            const dataPromise = fetch(\"https://pustot.github.io/db/mcpdict.db\", { mode: 'cors' }).then(res => res.arrayBuffer());\n            const [buf] = await Promise.all([dataPromise])\n            setDb(new SQL.Database(new Uint8Array(buf)));\n        } catch (err) {\n            setError(err);\n        }\n    }, []);\n\n    if (error) return <pre>{error.toString()}</pre>;\n    else if (!db) return <pre>Loading...</pre>;\n    else return <SQLRepl db={db} />;\n}\n\nfunction isChinese(s) {\n    // CJK Unified Ideographs (4E00–9FFF)\n    // CJK Unified Ideographs Extension A (3400–4DBF)\n    return /[\\u4e00-\\u9fa5]/.test(s)\n        || /[\\u3400-\\u4dbf]/.test(s);\n}\n\n// 2500 Primary Common Characters (Changyongzi) \n// and 1000 Secondary Common Characters (Cichangyongzi)\nconst hansPrim2500 = '一乙二十丁厂七卜人入八九几儿了力乃刀又三于干亏士工土才寸下大丈与万上小口巾山千乞川亿个勺久凡及夕丸么广亡门义之尸弓己已子卫也女飞刃习叉马乡丰王井开夫天无元专云扎艺木五支厅不太犬区历尤友匹车巨牙屯比互切瓦止少日中冈贝内水见午牛手毛气升长仁什片仆化仇币仍仅斤爪反介父从今凶分乏公仓月氏勿欠风丹匀乌凤勾文六方火为斗忆订计户认心尺引丑巴孔队办以允予劝双书幻玉刊示末未击打巧正扑扒功扔去甘世古节本术可丙左厉右石布龙平灭轧东卡北占业旧帅归且旦目叶甲申叮电号田由史只央兄叼叫另叨叹四生失禾丘付仗代仙们仪白仔他斥瓜乎丛令用甩印乐句匆册犯外处冬鸟务包饥主市立闪兰半汁汇头汉宁穴它讨写让礼训必议讯记永司尼民出辽奶奴加召皮边发孕圣对台矛纠母幼丝式刑动扛寺吉扣考托老执巩圾扩扫地扬场耳共芒亚芝朽朴机权过臣再协西压厌在有百存而页匠夸夺灰达列死成夹轨邪划迈毕至此贞师尘尖劣光当早吐吓虫曲团同吊吃因吸吗屿帆岁回岂刚则肉网年朱先丢舌竹迁乔伟传乒乓休伍伏优伐延件任伤价份华仰仿伙伪自血向似后行舟全会杀合兆企众爷伞创肌朵杂危旬旨负各名多争色壮冲冰庄庆亦刘齐交次衣产决充妄闭问闯羊并关米灯州汗污江池汤忙兴宇守宅字安讲军许论农讽设访寻那迅尽导异孙阵阳收阶阴防奸如妇好她妈戏羽观欢买红纤级约纪驰巡寿弄麦形进戒吞远违运扶抚坛技坏扰拒找批扯址走抄坝贡攻赤折抓扮抢孝均抛投坟抗坑坊抖护壳志扭块声把报却劫芽花芹芬苍芳严芦劳克苏杆杠杜材村杏极李杨求更束豆两丽医辰励否还歼来连步坚旱盯呈时吴助县里呆园旷围呀吨足邮男困吵串员听吩吹呜吧吼别岗帐财针钉告我乱利秃秀私每兵估体何但伸作伯伶佣低你住位伴身皂佛近彻役返余希坐谷妥含邻岔肝肚肠龟免狂犹角删条卵岛迎饭饮系言冻状亩况床库疗应冷这序辛弃冶忘闲间闷判灶灿弟汪沙汽沃泛沟没沈沉怀忧快完宋宏牢究穷灾良证启评补初社识诉诊词译君灵即层尿尾迟局改张忌际陆阿陈阻附妙妖妨努忍劲鸡驱纯纱纳纲驳纵纷纸纹纺驴纽奉玩环武青责现表规抹拢拔拣担坦押抽拐拖拍者顶拆拥抵拘势抱垃拉拦拌幸招坡披拨择抬其取苦若茂苹苗英范直茄茎茅林枝杯柜析板松枪构杰述枕丧或画卧事刺枣雨卖矿码厕奔奇奋态欧垄妻轰顷转斩轮软到非叔肯齿些虎虏肾贤尚旺具果味昆国昌畅明易昂典固忠咐呼鸣咏呢岸岩帖罗帜岭凯败贩购图钓制知垂牧物乖刮秆和季委佳侍供使例版侄侦侧凭侨佩货依的迫质欣征往爬彼径所舍金命斧爸采受乳贪念贫肤肺肢肿胀朋股肥服胁周昏鱼兔狐忽狗备饰饱饲变京享店夜庙府底剂郊废净盲放刻育闸闹郑券卷单炒炊炕炎炉沫浅法泄河沾泪油泊沿泡注泻泳泥沸波泼泽治怖性怕怜怪学宝宗定宜审宙官空帘实试郎诗肩房诚衬衫视话诞询该详建肃录隶居届刷屈弦承孟孤陕降限妹姑姐姓始驾参艰线练组细驶织终驻驼绍经贯奏春帮珍玻毒型挂封持项垮挎城挠政赴赵挡挺括拴拾挑指垫挣挤拼挖按挥挪某甚革荐巷带草茧茶荒茫荡荣故胡南药标枯柄栋相查柏柳柱柿栏树要咸威歪研砖厘厚砌砍面耐耍牵残殃轻鸦皆背战点临览竖省削尝是盼眨哄显哑冒映星昨畏趴胃贵界虹虾蚁思蚂虽品咽骂哗咱响哈咬咳哪炭峡罚贱贴骨钞钟钢钥钩卸缸拜看矩怎牲选适秒香种秋科重复竿段便俩贷顺修保促侮俭俗俘信皇泉鬼侵追俊盾待律很须叙剑逃食盆胆胜胞胖脉勉狭狮独狡狱狠贸怨急饶蚀饺饼弯将奖哀亭亮度迹庭疮疯疫疤姿亲音帝施闻阀阁差养美姜叛送类迷前首逆总炼炸炮烂剃洁洪洒浇浊洞测洗活派洽染济洋洲浑浓津恒恢恰恼恨举觉宣室宫宪突穿窃客冠语扁袄祖神祝误诱说诵垦退既屋昼费陡眉孩除险院娃姥姨姻娇怒架贺盈勇怠柔垒绑绒结绕骄绘给络骆绝绞统耕耗艳泰珠班素蚕顽盏匪捞栽捕振载赶起盐捎捏埋捉捆捐损都哲逝捡换挽热恐壶挨耻耽恭莲莫荷获晋恶真框桂档桐株桥桃格校核样根索哥速逗栗配翅辱唇夏础破原套逐烈殊顾轿较顿毙致柴桌虑监紧党晒眠晓鸭晃晌晕蚊哨哭恩唤啊唉罢峰圆贼贿钱钳钻铁铃铅缺氧特牺造乘敌秤租积秧秩称秘透笔笑笋债借值倚倾倒倘俱倡候俯倍倦健臭射躬息徒徐舰舱般航途拿爹爱颂翁脆脂胸胳脏胶脑狸狼逢留皱饿恋桨浆衰高席准座脊症病疾疼疲效离唐资凉站剖竞部旁旅畜阅羞瓶拳粉料益兼烤烘烦烧烛烟递涛浙涝酒涉消浩海涂浴浮流润浪浸涨烫涌悟悄悔悦害宽家宵宴宾窄容宰案请朗诸读扇袜袖袍被祥课谁调冤谅谈谊剥恳展剧屑弱陵陶陷陪娱娘通能难预桑绢绣验继球理捧堵描域掩捷排掉堆推掀授教掏掠培接控探据掘职基著勒黄萌萝菌菜萄菊萍菠营械梦梢梅检梳梯桶救副票戚爽聋袭盛雪辅辆虚雀堂常匙晨睁眯眼悬野啦晚啄距跃略蛇累唱患唯崖崭崇圈铜铲银甜梨犁移笨笼笛符第敏做袋悠偿偶偷您售停偏假得衔盘船斜盒鸽悉欲彩领脚脖脸脱象够猜猪猎猫猛馅馆凑减毫麻痒痕廊康庸鹿盗章竟商族旋望率着盖粘粗粒断剪兽清添淋淹渠渐混渔淘液淡深婆梁渗情惜惭悼惧惕惊惨惯寇寄宿窑密谋谎祸谜逮敢屠弹随蛋隆隐婚婶颈绩绪续骑绳维绵绸绿琴斑替款堪搭塔越趁趋超提堤博揭喜插揪搜煮援裁搁搂搅握揉斯期欺联散惹葬葛董葡敬葱落朝辜葵棒棋植森椅椒棵棍棉棚棕惠惑逼厨厦硬确雁殖裂雄暂雅辈悲紫辉敞赏掌晴暑最量喷晶喇遇喊景践跌跑遗蛙蛛蜓喝喂喘喉幅帽赌赔黑铸铺链销锁锄锅锈锋锐短智毯鹅剩稍程稀税筐等筑策筛筒答筋筝傲傅牌堡集焦傍储奥街惩御循艇舒番释禽腊脾腔鲁猾猴然馋装蛮就痛童阔善羡普粪尊道曾焰港湖渣湿温渴滑湾渡游滋溉愤慌惰愧愉慨割寒富窜窝窗遍裕裤裙谢谣谦属屡强粥疏隔隙絮嫂登缎缓编骗缘瑞魂肆摄摸填搏塌鼓摆携搬摇搞塘摊蒜勤鹊蓝墓幕蓬蓄蒙蒸献禁楚想槐榆楼概赖酬感碍碑碎碰碗碌雷零雾雹输督龄鉴睛睡睬鄙愚暖盟歇暗照跨跳跪路跟遣蛾蜂嗓置罪罩错锡锣锤锦键锯矮辞稠愁筹签简毁舅鼠催傻像躲微愈遥腰腥腹腾腿触解酱痰廉新韵意粮数煎塑慈煤煌满漠源滤滥滔溪溜滚滨粱滩慎誉塞谨福群殿辟障嫌嫁叠缝缠静碧璃墙撇嘉摧截誓境摘摔聚蔽慕暮蔑模榴榜榨歌遭酷酿酸磁愿需弊裳颗嗽蜻蜡蝇蜘赚锹锻舞稳算箩管僚鼻魄貌膜膊膀鲜疑馒裹敲豪膏遮腐瘦辣竭端旗精歉熄熔漆漂漫滴演漏慢寨赛察蜜谱嫩翠熊凳骡缩慧撕撒趣趟撑播撞撤增聪鞋蕉蔬横槽樱橡飘醋醉震霉瞒题暴瞎影踢踏踩踪蝶蝴嘱墨镇靠稻黎稿稼箱箭篇僵躺僻德艘膝膛熟摩颜毅糊遵潜潮懂额慰劈操燕薯薪薄颠橘整融醒餐嘴蹄器赠默镜赞篮邀衡膨雕磨凝辨辩糖糕燃澡激懒壁避缴戴擦鞠藏霜霞瞧蹈螺穗繁辫赢糟糠燥臂翼骤鞭覆蹦镰翻鹰警攀蹲颤瓣爆疆壤耀躁嚼嚷籍魔灌蠢霸露囊罐'\nconst hansSecond1000 = '匕刁丐歹戈夭仑讥冗邓艾夯凸卢叭叽皿凹囚矢乍尔冯玄邦迂邢芋芍吏夷吁吕吆屹廷迄臼仲伦伊肋旭匈凫妆亥汛讳讶讹讼诀弛阱驮驯纫玖玛韧抠扼汞扳抡坎坞抑拟抒芙芜苇芥芯芭杖杉巫杈甫匣轩卤肖吱吠呕呐吟呛吻吭邑囤吮岖牡佑佃伺囱肛肘甸狈鸠彤灸刨庇吝庐闰兑灼沐沛汰沥沦汹沧沪忱诅诈罕屁坠妓姊妒纬玫卦坷坯拓坪坤拄拧拂拙拇拗茉昔苛苫苟苞茁苔枉枢枚枫杭郁矾奈奄殴歧卓昙哎咕呵咙呻咒咆咖帕账贬贮氛秉岳侠侥侣侈卑刽刹肴觅忿瓮肮肪狞庞疟疙疚卒氓炬沽沮泣泞泌沼怔怯宠宛衩祈诡帚屉弧弥陋陌函姆虱叁绅驹绊绎契贰玷玲珊拭拷拱挟垢垛拯荆茸茬荚茵茴荞荠荤荧荔栈柑栅柠枷勃柬砂泵砚鸥轴韭虐昧盹咧昵昭盅勋哆咪哟幽钙钝钠钦钧钮毡氢秕俏俄俐侯徊衍胚胧胎狰饵峦奕咨飒闺闽籽娄烁炫洼柒涎洛恃恍恬恤宦诫诬祠诲屏屎逊陨姚娜蚤骇耘耙秦匿埂捂捍袁捌挫挚捣捅埃耿聂荸莽莱莉莹莺梆栖桦栓桅桩贾酌砸砰砾殉逞哮唠哺剔蚌蚜畔蚣蚪蚓哩圃鸯唁哼唆峭唧峻赂赃钾铆氨秫笆俺赁倔殷耸舀豺豹颁胯胰脐脓逛卿鸵鸳馁凌凄衷郭斋疹紊瓷羔烙浦涡涣涤涧涕涩悍悯窍诺诽袒谆祟恕娩骏琐麸琉琅措捺捶赦埠捻掐掂掖掷掸掺勘聊娶菱菲萎菩萤乾萧萨菇彬梗梧梭曹酝酗厢硅硕奢盔匾颅彪眶晤曼晦冕啡畦趾啃蛆蚯蛉蛀唬啰唾啤啥啸崎逻崔崩婴赊铐铛铝铡铣铭矫秸秽笙笤偎傀躯兜衅徘徙舶舷舵敛翎脯逸凰猖祭烹庶庵痊阎阐眷焊焕鸿涯淑淌淮淆渊淫淳淤淀涮涵惦悴惋寂窒谍谐裆袱祷谒谓谚尉堕隅婉颇绰绷综绽缀巢琳琢琼揍堰揩揽揖彭揣搀搓壹搔葫募蒋蒂韩棱椰焚椎棺榔椭粟棘酣酥硝硫颊雳翘凿棠晰鼎喳遏晾畴跋跛蛔蜒蛤鹃喻啼喧嵌赋赎赐锉锌甥掰氮氯黍筏牍粤逾腌腋腕猩猬惫敦痘痢痪竣翔奠遂焙滞湘渤渺溃溅湃愕惶寓窖窘雇谤犀隘媒媚婿缅缆缔缕骚瑟鹉瑰搪聘斟靴靶蓖蒿蒲蓉楔椿楷榄楞楣酪碘硼碉辐辑频睹睦瞄嗜嗦暇畸跷跺蜈蜗蜕蛹嗅嗡嗤署蜀幌锚锥锨锭锰稚颓筷魁衙腻腮腺鹏肄猿颖煞雏馍馏禀痹廓痴靖誊漓溢溯溶滓溺寞窥窟寝褂裸谬媳嫉缚缤剿赘熬赫蔫摹蔓蔗蔼熙蔚兢榛榕酵碟碴碱碳辕辖雌墅嘁踊蝉嘀幔镀舔熏箍箕箫舆僧孵瘩瘟彰粹漱漩漾慷寡寥谭褐褪隧嫡缨撵撩撮撬擒墩撰鞍蕊蕴樊樟橄敷豌醇磕磅碾憋嘶嘲嘹蝠蝎蝌蝗蝙嘿幢镊镐稽篓膘鲤鲫褒瘪瘤瘫凛澎潭潦澳潘澈澜澄憔懊憎翩褥谴鹤憨履嬉豫缭撼擂擅蕾薛薇擎翰噩橱橙瓢蟥霍霎辙冀踱蹂蟆螃螟噪鹦黔穆篡篷篙篱儒膳鲸瘾瘸糙燎濒憾懈窿缰壕藐檬檐檩檀礁磷瞭瞬瞳瞪曙蹋蟋蟀嚎赡镣魏簇儡徽爵朦臊鳄糜癌懦豁臀藕藤瞻嚣鳍癞瀑襟璧戳攒孽蘑藻鳖蹭蹬簸簿蟹靡癣羹鬓攘蠕巍鳞糯譬霹躏髓蘸镶瓤矗'\n\nfunction getRandom3500Han() {\n    // Math.floor(Math.random() * (max - min + 1) + min) // included, where Math.random() is [0, 1)\n    // 80% probability to choose primary common chars\n    if (Math.random() <= 0.8)\n        return hansPrim2500.charAt(Math.floor(Math.random() * 2500));\n    else\n        return hansSecond1000.charAt(Math.floor(Math.random() * 1000));\n}\n\n/**\n * A simple SQL read-eval-print-loop\n * @param {{db: import(\"sql.js\").Database}} props\n */\nfunction SQLRepl({ db }) {\n    const [query, setQuery] = useState('');\n    const [error, setError] = useState(null);\n    const [results, setResults] = useState([]);\n    const [isCardMode, setIsCardMode] = useState(true);\n    const [showVariants, setShowVariants] = useState(true);\n    const [showGuangyunOnly, setShowGuangyunOnly] = useState(false);\n\n    useEffect(() => {\n        exec(query);\n    }, [query, showVariants, showGuangyunOnly])\n\n    function exec(query) {\n        if (query == '') return;\n        setResults([]);\n        try {\n            // strange as the return format of the sqlite db lib\n            // columns from the sqlite: ['unicode', 'mc', 'pu', 'ct', 'sh', 'mn', 'kr', 'vn', 'jp_go', 'jp_kan', 'jp_tou', 'jp_kwan', 'jp_other']\n            let res = [{\n                columns: ['tupa', 'unt-tz', 'qieyun', 'unicode', 'mc', 'pu', 'ct', 'sh', 'mn', 'kr', 'vn', 'jp_go', 'jp_kan', 'jp_tou', 'jp_kwan', 'jp_other'],\n                values: []\n            }];\n\n            // split the query to terms\n            // Hans are seperate and converted to Yitizis\n            // consecutive Alphanumeric chars are one term\n            let terms = [];\n            let currAlphaNumTerm = '';\n            for (let i = 0; i < query.length; i++) {\n                let ch = query[i];\n                if ((/[a-zA-Z0-9]/).test(ch)) {\n                    // AlphaNumeric\n                    currAlphaNumTerm += ch;\n                } else if (isChinese(ch)) {\n                    // Chinese Char\n                    if (currAlphaNumTerm) {\n                        terms.push(currAlphaNumTerm);\n                        currAlphaNumTerm = '';\n                    }\n                    if (showGuangyunOnly) {\n                        for (let yitiCh of [ch, ...Yitizi.get(ch)])\n                            if (Qieyun.資料.query字頭(yitiCh).length != 0)\n                                terms.push(yitiCh);\n                    } else if (showVariants) {\n                        // Add Han variants to `terms`\n                        let ch_hk = converterCH(ch);\n                        terms.push(ch_hk, converterHT(ch_hk), converterHC(ch_hk), converterHJ(ch_hk))\n                        terms = terms.concat(Yitizi.get(ch))\n                    } else  {\n                        terms.push(ch);\n                    }\n                } else {\n                    // Else chars as seperator\n                    if (currAlphaNumTerm) {\n                        terms.push(currAlphaNumTerm);\n                        currAlphaNumTerm = '';\n                    }\n                }\n            }\n            if (currAlphaNumTerm) {\n                terms.push(currAlphaNumTerm);\n                currAlphaNumTerm = '';\n            }\n\n            // The sql is executed synchronously on the UI thread.\n            // You may want to use a web worker here instead\n            for (let item of [...new Set(terms)]) {\n                let newsql = \"\";\n                if (isChinese(item)) {\n                    let unicode = ''\n                    unicode += item.charCodeAt(0).toString(16);\n                    newsql = `SELECT * FROM mcpdict WHERE unicode LIKE '%${unicode}%'`\n                } else {\n                    newsql = `SELECT * FROM mcpdict \n                         WHERE mc LIKE '%${item}%' \n                         OR pu LIKE '%${item}%'\n                         OR ct LIKE '%${item}%'\n                         OR sh LIKE '%${item}%'\n                         OR mn LIKE '%${item}%'\n                         OR kr LIKE '%${item}%'\n                         OR vn LIKE '%${item}%'\n                         OR jp_go LIKE '%${item}%'\n                         OR jp_kan LIKE '%${item}%'\n                         OR jp_tou LIKE '%${item}%'\n                         OR jp_kwan LIKE '%${item}%'\n                         OR jp_other LIKE '%${item}%'\n                         LIMIT 72`\n                }\n                setError(null);\n                let newRes = db.exec(newsql);\n                if (isChinese(item) && newRes.length == 0)\n                    newRes.push({\n                        columns: ['tupa', 'unt-tz', 'qieyun', 'unicode', 'mc', 'pu', 'ct', 'sh', 'mn', 'kr', 'vn', 'jp_go', 'jp_kan', 'jp_tou', 'jp_kwan', 'jp_other'],\n                        values: [[item.charCodeAt(0).toString(16), '', '', '', '', '', '', '', '', '', '', '', '']]\n                    })\n                if (newRes.length) {\n                    newRes[0].values = newRes[0].values.map((entry, i) => {\n                        const han = String.fromCodePoint(Number('0x' + entry[0]));\n                        const 音韻地位列表 = Qieyun.資料.query字頭(han).map((v, i) => v.音韻地位);\n                        entry.unshift(音韻地位列表.map((v, i) => v.描述).join(','));\n                        entry.unshift(音韻地位列表.map((v, i) => unt.schema({ 版本: '通俗' })(v)).join(','));\n                        entry.unshift(音韻地位列表.map((v, i) => tupa(v)).join(','));\n                        return entry\n                    })\n                    res[0].values = res[0].values.concat(newRes[0].values)\n                }\n            }\n            setResults(res); // an array of objects is returned\n\n        } catch (err) {\n            // exec throws an error when the SQL statement is invalid\n            setError(err);\n            setResults([]);\n        }\n    }\n\n    const handleClickRandom = () => {\n        let randHan = getRandom3500Han();\n        document.getElementById('queryTextarea').value = randHan;\n        setQuery(randHan);\n    }\n\n    return (\n        <Container className=\"App\">\n            <h1>HanPoly</h1>\n            <Typography variant=\"body2\" gutterBottom>\n                search Chinese characters (Unicode alias: Han)\n                and some of their romanizations for many languages and dialects.\n            </Typography>\n\n\n            <textarea\n                id=\"queryTextarea\"\n                onChange={(e) => setQuery(e.target.value)}\n                placeholder=\"Enter Chinese character(s) or romanization(s), or click on `RANDOM HAN`. No inspiration ? Try `文` or `myon`\"\n            />\n\n            <Stack direction=\"row\" spacing={3} flexWrap=\"wrap\" justifyContent=\"flex-start\">\n\n                <FormControlLabel control={<Switch\n                    checked={showVariants}\n                    onChange={() => setShowVariants(!showVariants)}\n                    name=\"繁/簡/異 Conversion\"\n                    color=\"primary\"\n                />} label=\"繁/簡/異 Conversion\" />\n\n                <FormControlLabel control={<Switch\n                    checked={showGuangyunOnly}\n                    onChange={() => setShowGuangyunOnly(!showGuangyunOnly)}\n                    name=\"廣韻 Guangyun Only\"\n                    color=\"primary\"\n                />} label=\"廣韻 Guangyun Only\" />\n\n                <Tooltip title=\"Get a Random Han from the 3500 Most Common Characters\">\n                    <Button onClick={handleClickRandom}>Random Han</Button>\n                </Tooltip>\n\n                <FormControlLabel control={<Switch\n                    checked={isCardMode}\n                    onChange={() => setIsCardMode(!isCardMode)}\n                    name=\"Card Mode\"\n                    color=\"primary\"\n                />} label=\"Card Mode\" />\n\n            </Stack>\n\n\n            <pre className=\"error\">{(error || \"\").toString()}</pre>\n\n            <pre>\n                {\n                    !isCardMode ? (\n                        // results contains one object per select statement in the query\n                        results.map(({ columns, values }, i) => (\n                            <ResultsTable key={i} columns={columns} values={values} />\n                        ))\n                    ) : (\n                        results.map(({ columns, values }, i) => (\n                            <HansContainer key={i} columns={columns} data={values} />\n                        ))\n                    )\n                }\n            </pre>\n        </Container>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { ThemeProvider, useTheme, createTheme } from '@mui/material/styles';\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n    },\n});\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={darkTheme}>\n            <App />\n        </ThemeProvider>\n    </React.StrictMode>,\n    rootElement\n);\n"],"sourceRoot":""}